name: Release helm chart
on:
  push:
    tags:
      - 'v*'
jobs:
  register:
    name: Package, Publish
    runs-on:
      - ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: helm_install
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      - id: helm_login
        run: |
          echo ${PASSWORD} | helm registry login -u ${USERNAME} --password-stdin ${REGISTRY}
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ secrets.OCI_REGISTRY_USER }}
          PASSWORD: ${{ secrets.OCI_REGISTRY_PASS }}
      - id: package
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          VERSION=${GITHUB_REF##refs/tags/v}
          IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY}"
          helm package . --version ${VERSION}
          helm push ${{ github.event.repository.name }}-${VERSION}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
          echo "::set-output name=id::${IMAGE_NAME}"
          echo "::set-output name=version::$VERSION"
        shell: bash
      - id: helm_logout
        run: |
          helm registry logout ghcr.io
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            oci url: ${{ steps.package.outputs.id }}:${{ steps.package.outputs.version }}
          draft: false
          prerelease: false
